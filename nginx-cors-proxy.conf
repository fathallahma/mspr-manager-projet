worker_processes 1;

events {
    worker_connections 1024;
}

http {
    server {
        listen 8089; # Nginx écoutera sur ce port
        server_name localhost;

        location / {
            # ---- Section CORS ----
            # Permettre les requêtes depuis ton frontend React
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3001' always;
            # Méthodes HTTP autorisées
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            # En-têtes autorisés
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With, X-Faas-Filter' always;
            # Permettre les cookies/credentials si besoin (souvent utile)
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Gérer les requêtes preflight OPTIONS
            if ($request_method = 'OPTIONS') {
                return 204; # Répondre avec 204 No Content, les en-têtes ci-dessus suffisent
            }
            # ---- Fin Section CORS ----

            # Proxy vers ton OpenFaaS gateway (accessible via kubectl port-forward sur 8088)
            proxy_pass http://127.0.0.1:8088; # Assure-toi que ton port-forward est sur 8088
            
            # Transmettre les en-têtes importants
            proxy_set_header Host $host; # Important pour que OpenFaaS sache quel host est demandé
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Augmenter les timeouts si tes fonctions sont longues à répondre
            proxy_connect_timeout       60s;
            proxy_send_timeout          60s;
            proxy_read_timeout          60s;
            send_timeout                60s;
        }
    }
} 